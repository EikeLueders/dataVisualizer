
<% if Resque.info[:failed].to_i > 0 %>
<div class="alert alert-error">
  <a class="close" data-dismiss="alert">&#215;</a>
  <%= content_tag :div, "Import jobs failed: #{Resque.info[:failed]}" %>
</div>
<% end %>

<%- model_class = Project -%>
<div class="page-header">
  <h1><%=t '.title', :default => "#{model_class.model_name.human}: #{@project.name}" %></h1>
  <div style="color: #a0a0a0;margin-top:10px">
    <%= model_class.human_attribute_name(:factor) %>: <strong><%= @project.factor %></strong>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<%= model_class.human_attribute_name(:unit) %>: <strong><%= @project.unit %></strong>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<%= model_class.human_attribute_name(:resolutions) %>: <strong><%= @project.comma_separated_resolutions %></strong>
    <br />
    <%= @project.description %>
  </div>
</div>

<div id="container" style="min-width: 400px; height: 500px; margin: 0 auto"></div>

<div id="nodata" class="alert alert-error" style="display:none">
  <%= content_tag :div, "No Data yet!" %>
</div>

<div class="form-actions">
  <%= link_to t('.back', :default => t("helpers.links.back")),
              projects_path, :class => 'btn'  %>
  <%= link_to t('.edit', :default => t("helpers.links.edit")),
              edit_project_path(@project), :class => 'btn' %>
  <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
              project_path(@project),
              :method => 'delete',
              :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')),
              :class => 'btn btn-danger' %>
  <%= link_to t('.upload_new_file', :default => t("helpers.links.upload_new_file")),
              project_newfileupload_path(@project),
              :class => 'btn btn-primary' %>
</div>

<script type="text/javascript">

function onSetExtremes(e) { 
	currentExtremes = e.target.getExtremes();
	if (e.min !== currentExtremes.min || e.max !== currentExtremes.max) {
    loadData(e.min, e.max);
	}
}

function loadData(from_timestamp, to_timestamp) {
	//console.log(from_timestamp);
	//console.log(to_timestamp);	
	// Parameter vorhanden?
  params = '?plotwidth=' + window.chart.plotWidth;
  if (from_timestamp != undefined && to_timestamp != undefined) {
    params += '&from=' + from_timestamp + '&to=' + to_timestamp;
  }
  
  window.chart.showLoading('Loading data...');

  // Ajax-Anfrage nach Graphdaten in passender Aufloesung
  $.getJSON('<%= project_ajax_data_load_path(@project) %>.json' + params, function(data) {        
    if (data[0].length) {
      xData = window.chart.series[0].xData;
      xDataAggregated = window.chart.series[1].xData;
      
      if (xData.length != 0 && xDataAggregated.length != 0) {
        firstIndex = -1;
        lastIndex = -1;
      
        for (var i = 0; i < xData.length; i++) {
          if (xData[i] >= data[0][0][0] && firstIndex == -1) {
            firstIndex = i;
          };
          if (xData[i] >= data[0][data[0].length-1][0] && lastIndex == -1) {
            lastIndex = i;
          };
        }

        chartData = window.chart.series[0].options.data;
        dataLength = chartData.length;      
        lastArray = chartData.slice(lastIndex, dataLength - 1);
        firstArray = chartData.slice(0, firstIndex);
        newData = $.merge($.merge(firstArray, data[0]), lastArray)
        
        for (var i = 0; i < xDataAggregated.length; i++) {
          if (xDataAggregated[i] >= data[1][0][0] && firstIndex == -1) {
            firstIndex = i;
          };
          if (xDataAggregated[i] >= data[1][data[1].length-1][0] && lastIndex == -1) {
            lastIndex = i;
          };
        }
        
        chartDataAggregated = window.chart.series[1].options.data;
        dataLength = chartDataAggregated.length;      
        lastArray = chartDataAggregated.slice(lastIndex, dataLength - 1);
        firstArray = chartDataAggregated.slice(0, firstIndex);
        newDataAggregated = $.merge($.merge(firstArray, data[1]), lastArray)
        
        window.chart.series[0].setData(newData, true);
        window.chart.series[1].setData(newDataAggregated, true);
      } else {
        window.chart.series[0].setData(data[0], true);
        window.chart.series[1].setData(data[1], true);
      }
    } else {
      $('#container').hide();
      $('#nodata').show();
    }
    //window.chart.options = { subtitle : { text : data.length + " data elements has been loaded" } };
    window.chart.hideLoading();
  });
}

$(function() {

	// Create the chart
	window.chart = new Highcharts.StockChart({
		chart : {
			renderTo : 'container',
			zoomType: 'x'
		},
		
		credits : {
		  enabled : false
		},

		rangeSelector : {
			selected : 4,
			buttons: [
			{
				type: 'hour',
				count: 1,
				text: '1h'
			},
			{
				type: 'day',
				count: 1,
				text: '1d'
			},
			{
				type: 'month',
				count: 1,
				text: '1m'
			}, 
			{
				type: 'year',
				count: 1,
				text: '1y'
			},
			{
				type: 'all',
				text: 'All'
			}]
		},

		title : {
			text : '<%= @project.name %>'
		},
		
	  xAxis : {
		  events : {
			  setExtremes : onSetExtremes
		  },
		  ordinal: false
    },
		
		point : {
		  color : '#C80000'
		},
		
		yAxis : [{
		  title :  {
		    text : 'Current <%= @project.unit %>'
		  },
		},
		{
		  title :  {
		    text : 'Total <%= @project.unit %>',
		    style: {
        	color: '#C80000'
        }
		  },
		  labels : {
		    style: {
        	color: '#C80000'
        }
		  },
		  opposite: true
		}],
		
		series : [{
			name : 'Current',
			type : 'area',
			dataGrouping : {
				enabled : false
			},
			tooltip : {
				valueDecimals : 2,
				valueSuffix : ' <%= @project.unit %>'
			},
			yAxis: 0,
			cropThreshold: 0,
			fillColor : {
				linearGradient : {
					x1: 0, 
					y1: 0, 
					x2: 0, 
					y2: 1
				},
				stops : [[0, Highcharts.getOptions().colors[0]], [1, 'rgba(0,0,0,0)']]
			}
		},
		{
			name : 'Total',
			type : 'line',
			dataGrouping : {
				enabled : false
			},
    	color: '#C80000',
			tooltip : {
				valueDecimals : 2,
				valueSuffix : ' <%= @project.unit %>'
			},
			yAxis: 1,
			cropThreshold: 0
		}]
	});

  loadData();
  
  $(".highcharts-range-selector").datepicker();
  $(".highcharts-range-selector").datepicker("option", "dateFormat", "yy-mm-dd");
});

</script>
